using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Blazor_AoC.Code._2020
{
    [Puzzle(2, "Password Philosophy")]
    public class Day2 : Solution
    {
        private string inputString = string.Empty;
        private string[] parsedInput;
        private string[] delims = { "-", " ", ": " };

        public Day2(string inputBox)
        {
            inputString = inputBox;
        }

        public override async Task<string> GetPart1(CancellationToken cancellationToken)
        {
            parsedInput = inputString.Split('\n').ToArray();

            int valid_password_count = 0;

            foreach(string str in parsedInput)
            {
                if (isValid1(str))
                {
                    valid_password_count++;
                }
            }

            return valid_password_count.ToString();
        }

        public override async Task<string> GetPart2(CancellationToken cancellationToken)
        {
            int valid_password_count = 0;

            foreach (string str in parsedInput)
            {
                if (isValid2(str))
                {
                    valid_password_count++;
                }
            }

            return valid_password_count.ToString();
        }

        private bool isValid1(string str)
        {
            string[] line = str.Split(delims, System.StringSplitOptions.RemoveEmptyEntries);
            int lower = int.Parse(line[0]);
            int higher = int.Parse(line[1]);
            char letter = char.Parse(line[2]);
            string password = line[3];

            int count = 0;

            foreach(char c in password)
            {
                if (c.Equals(letter))
                {
                    count++;
                }
            }

            return (count >= lower && count <= higher);
        }

        private bool isValid2(string str)
        {
            string[] line = str.Split(delims, System.StringSplitOptions.RemoveEmptyEntries);
            int pos1 = int.Parse(line[0]);
            int pos2 = int.Parse(line[1]);
            char letter = char.Parse(line[2]);
            string password = line[3];

            int count = 0;

            count += (password[pos1-1].Equals(letter)) ? 1 : 0;
            count += (password[pos2-1].Equals(letter)) ? 1 : 0;

            return count.Equals(1);
        }
    }
}